<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>charles-assembly</artifactId>
	<name>charles-assembly</name>
	<packaging>jar</packaging>
	<url>http://www.charlesproxy.com/</url>

	<parent>
		<groupId>com.xk72.charles</groupId>
		<artifactId>charles-parent</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../../parent/pom.xml</relativePath>
	</parent>
	
	<properties>
	   <alpn.version>8.1.9.v20160720.charles</alpn.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.xk72.charles</groupId>
			<artifactId>charles-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.xk72.charles</groupId>
			<artifactId>charles-gui</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.xk72.charles</groupId>
			<artifactId>charles-tools</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>com.xk72.charles</groupId>
			<artifactId>charles-unsafe</artifactId>
			<version>${project.version}</version>
		</dependency>
        <dependency>
            <groupId>com.xk72</groupId>
            <artifactId>charles-patch</artifactId>
            <version>1.0</version>
            <scope>import</scope>
        </dependency>
        <dependency>
            <groupId>org.mortbay.jetty.alpn</groupId>
            <artifactId>alpn-boot</artifactId>
            <version>${alpn.version}</version>
            <scope>import</scope>
        </dependency>
		
		<!-- Proguard dependencies for obfuscation -->
		<dependency>
			<groupId>net.sf.proguard</groupId>
			<artifactId>proguard-base</artifactId>
			<version>5.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.proguard</groupId>
			<artifactId>proguard-anttask</artifactId>
			<version>5.2</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- Code references these packages and they are therefore required to run Proguard without warnings -->
		<dependency>
			<groupId>com.apple</groupId>
			<artifactId>AppleJavaExtensions</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.xk72</groupId>
			<artifactId>apple-java-compat</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>ch.randelshofer.quaqua</groupId>
			<artifactId>quaqua</artifactId>
			<scope>provided</scope>
		</dependency>
        <dependency>
            <groupId>org.violetlib</groupId>
            <artifactId>VAqua</artifactId>
            <scope>provided</scope>
        </dependency>
		<dependency>
			<groupId>com.jgoodies</groupId>
			<artifactId>jgoodies-looks</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.jgoodies</groupId>
			<artifactId>jgoodies-common</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<!-- We must name the output shaded file here otherwise we get confused on subsequent runs where nothing has
								 changed in this project, and our output jar has all the other jars shaded into it, then we try to re-shade...
							-->
							<!-- We strip the version from the jar name to make it easier to find with the Ant scripts -->
							<finalName>charles</finalName>
							<artifactSet>
								<includes>
									<!-- Include all the com.xk72.charles: artifacts in a shaded jar, so we can obfuscate them.
									     We don't use a wildcard match so we can specifically choose the artifacts to include, as
									     some artifacts are for internal use only.
									-->
									<include>com.xk72.charles:charles-amf</include>
									<include>com.xk72.charles:charles-assembly</include>
									<include>com.xk72.charles:charles-core</include>
									<include>com.xk72.charles:charles-common</include>
									<include>com.xk72.charles:charles-diff</include>
									<include>com.xk72.charles:charles-gui</include>
									<include>com.xk72.charles:charles-protobuf</include>
									<include>com.xk72.charles:charles-proxy</include>
									<include>com.xk72.charles:charles-proxy7</include>
									<include>com.xk72.charles:charles-swfx</include>
									<include>com.xk72.charles:charles-tools</include>
									<include>com.xk72.charles:charles-util</include>
									<include>com.xk72.charles:charles-unsafe</include>
								</includes>
							</artifactSet>
							<createDependencyReducedPom>false</createDependencyReducedPom>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-dependency-plugin</artifactId>
			    <executions>
			    	<execution>
			    		<id>copy-deps</id>
			    		<goals>
			    			<goal>copy-dependencies</goal>
			    		</goals>
		                <configuration>
		                    <!-- We output each scope in its own directory to make it easier for the Ant scripts to find the required jars -->
		                    <useSubDirectoryPerScope>true</useSubDirectoryPerScope>
		                    <!-- Exclude all the com.xk72.charles:* artifacts, as we include them in the shaded jar -->
		                    <excludeGroupIds>com.xk72.charles</excludeGroupIds>
		                </configuration>
			    	</execution>
                    <execution>
                        <id>copy-jar</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.xk72</groupId>
                                    <artifactId>charles-patch</artifactId>
                                    <version>1.0</version>
                                    <outputDirectory>${outputDirectory}/boot</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.mortbay.jetty.alpn</groupId>
                                    <artifactId>alpn-boot</artifactId>
                                    <version>${alpn.version}</version>
                                    <outputDirectory>${outputDirectory}/boot</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
			    </executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>com.xk72.charles.gui.MainWithClassLoader</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.8,)
										</versionRange>
										<goals>
											<goal>
												copy-dependencies
											</goal>
											<goal>copy</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<profiles>
		<profile>
			<id>macosx</id>
			<dependencies>
				<dependency>
					<groupId>ch.randelshofer.quaqua</groupId>
					<artifactId>quaqua</artifactId>
				</dependency>
                <dependency>
                    <groupId>org.violetlib</groupId>
                    <artifactId>VAqua</artifactId>
                </dependency>
				<dependency>
					<groupId>org.jdesktop</groupId>
					<artifactId>swing-layout</artifactId>
					<version>1.0</version>
				</dependency>
				<dependency>
					<groupId>com.oracle</groupId>
					<artifactId>appbundler</artifactId>
					<version>1.0ea.124.20160223</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>win32</id>
			<dependencies>
				<dependency>
					<groupId>com.jgoodies</groupId>
					<artifactId>jgoodies-looks</artifactId>
				</dependency>
				<dependency>
					<groupId>com.jgoodies</groupId>
					<artifactId>jgoodies-common</artifactId>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>win64</id>
			<dependencies>
				<dependency>
					<groupId>com.jgoodies</groupId>
					<artifactId>jgoodies-looks</artifactId>
				</dependency>
				<dependency>
					<groupId>com.jgoodies</groupId>
					<artifactId>jgoodies-common</artifactId>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
	
</project>
